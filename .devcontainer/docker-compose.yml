version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
        - ./.env
    volumes:
      - ../..:/workspace/biblio-backoffice:cached
      - ~/biblio-backoffice/files:/workspace/files:cached
    command: 
      - bash
      - -c
      - |
        cd /workspace/biblio-backoffice
        go mod download -x
        bash -i -c 'nvm install'
        npm install
        tern status
        tern migrate
        go run main.go reset --confirm
        sleep infinity
    depends_on:
      - es
      - db-backoffice

  oidc:
    build: 
      context: .
      dockerfile: oidc.Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    network_mode: service:app

  people:
    build: 
      context: .
      dockerfile: people.Dockerfile
    restart: unless-stopped
    volumes:
      - .:/tern
      - ~/Workspace/people-service:/src
    env_file:
      - .env
    command:
      - sh
      - -c
      - |
        tern migrate
        /opt/people-service/people-service server
    network_mode: service:app
    depends_on:
      - db-people

  projects:
    image: ugentlib/projects:latest
    restart: unless-stopped
    env_file:
      - .env
    command:
      - sh
      - -c
      - |
        cd /dist
        /dist/tern status
        /dist/tern migrate
        /dist/app reindex
        /dist/app server
    network_mode: service:app
    depends_on:
      - es
      - db-projects

  db-backoffice:
    image: postgres:16-alpine
    restart: unless-stopped
    user: postgres
    volumes:
      - biblio-backoffice-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DATABASE: biblio
      POSTGRES_USER: biblio
      POSTGRES_PASSWORD: biblio
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U biblio -d biblio"]
      interval: 30s
      timeout: 10s
      retries: 5

  db-people:
    image: postgres:16-alpine
    restart: unless-stopped
    user: postgres
    volumes:
      - people-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DATABASE: people
      POSTGRES_USER: people
      POSTGRES_PASSWORD: people
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U people -d people"]
      interval: 30s
      timeout: 10s
      retries: 5

  db-projects:
    image: postgres:16-alpine
    restart: unless-stopped
    user: postgres
    volumes:
      - projects-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DATABASE: projects
      POSTGRES_USER: projects
      POSTGRES_PASSWORD: projects
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U projects -d projects"]
      interval: 30s
      timeout: 10s
      retries: 5

  es:
    platform: "linux/amd64"
    # TODO: elastic 6.8 doesn't provide an arm64 image. So, we need to use a 
    #   custom image for the time being. Switch this if you are on x86_64.
    image: elasticsearch:6.8.23
    # image: elyalvarado/elasticsearch-arm64:6.8.16
    environment:
        - ES_JAVA_OPTS=-Xmx2g -Xms2g
        - discovery.type=single-node
        - xpack.ml.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: >
        /bin/sh -c "./bin/elasticsearch-plugin list | grep -q analysis-icu
        || ./bin/elasticsearch-plugin install analysis-icu;
        /usr/local/bin/docker-entrypoint.sh"

volumes:
    esdata:
      driver: local 
      driver_opts:
        type: none
        device: ~/biblio-backoffice/backoffice/es_data
        o: bind    
    biblio-backoffice-data:
      driver: local 
      driver_opts:
        type: none
        device: ~/biblio-backoffice/backoffice/db_data
        o: bind
    people-data:
      driver: local 
      driver_opts:
        type: none
        device: ~/biblio-backoffice/people/db_data
        o: bind
    projects-data:
      driver: local 
      driver_opts:
        type: none
        device: ~/biblio-backoffice/projects/db_data
        o: bind


# Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
# (Adding the "ports" property to this file will not forward from a Codespace.)
