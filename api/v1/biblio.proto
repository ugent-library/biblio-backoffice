// make sure you have the protoc compiler
// and install the go plugins with
// go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
// go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
// then generate with
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative api/v1/biblio.proto

syntax = "proto3";

package biblio.v1;

option go_package = "github.com/ugent-library/biblio-backoffice/api/v1";

service Biblio {
    rpc GetFile(GetFileRequest) returns (stream GetFileResponse);
    rpc AddFile(stream AddFileRequest) returns (AddFileResponse);
    rpc GetPublication(GetPublicationRequest) returns (GetPublicationResponse);
    rpc GetAllPublications(GetAllPublicationsRequest) returns (stream GetAllPublicationsResponse);
    rpc SearchPublications(SearchPublicationsRequest) returns (SearchPublicationsResponse);
    rpc UpdatePublication(UpdatePublicationRequest) returns (UpdatePublicationResponse);
    rpc AddPublications(stream AddPublicationsRequest) returns (stream AddPublicationsResponse);
    rpc ImportPublications(stream ImportPublicationsRequest) returns (stream ImportPublicationsResponse);
    rpc GetPublicationHistory(GetPublicationHistoryRequest) returns (stream GetPublicationHistoryResponse);
    rpc PurgePublication(PurgePublicationRequest) returns (PurgePublicationResponse);
    rpc PurgeAllPublications(PurgeAllPublicationsRequest) returns (PurgeAllPublicationsResponse);
    rpc ValidatePublications(stream ValidatePublicationsRequest) returns (stream ValidatePublicationsResponse);
    rpc ReindexPublications(ReindexPublicationsRequest) returns (stream ReindexPublicationsResponse);
    rpc GetDataset(GetDatasetRequest) returns (GetDatasetResponse);
    rpc GetAllDatasets(GetAllDatasetsRequest) returns (stream GetAllDatasetsResponse);
    rpc SearchDatasets(SearchDatasetsRequest) returns (SearchDatasetsResponse);
    rpc UpdateDataset(UpdateDatasetRequest) returns (UpdateDatasetResponse);
    rpc AddDatasets(stream AddDatasetsRequest) returns (stream AddDatasetsResponse);
    rpc ImportDatasets(stream ImportDatasetsRequest) returns (stream importDatasetsResponse);
    rpc GetDatasetHistory(GetDatasetHistoryRequest) returns (stream GetDatasetHistoryResponse);
    rpc PurgeDataset(PurgeDatasetRequest) returns (PurgeDatasetResponse);
    rpc PurgeAllDatasets(PurgeAllDatasetsRequest) returns (PurgeAllDatasetsResponse);
    rpc ValidateDatasets(stream ValidateDatasetsRequest) returns (stream ValidateDatasetsResponse);
    rpc Relate(RelateRequest) returns (RelateResponse);
}

message Publication {
    bytes payload = 1;
}

message Dataset {
    bytes payload = 1;
}

message GetFileRequest {
    string sha256 = 1;
}

message GetFileResponse {
    bytes chunk = 1;
}

message AddFileRequest {
    bytes chunk = 1;
}

message AddFileResponse {
    string sha256 = 1;
}

message GetPublicationRequest {
    string id = 1;
}

message GetPublicationResponse {
    Publication publication = 1;
}

message GetAllPublicationsRequest {
}

message GetAllPublicationsResponse {
    Publication publication = 1;
}

message SearchPublicationsRequest {
    string query = 1;
    int32 offset = 2;
    int32 limit = 3;
}

message SearchPublicationsResponse {
    repeated Publication hits = 1;
    int32 offset = 2;
    int32 limit = 3;
    int32 total = 4;
}

message UpdatePublicationRequest {
    Publication publication = 1;
}

message UpdatePublicationResponse {
}

message AddPublicationsRequest {
    Publication publication = 1;
}

message AddPublicationsResponse {
    string message = 1;
}

message ImportPublicationsRequest {
    Publication publication = 1;
}

message ImportPublicationsResponse {
    string message = 1;
}

message GetPublicationHistoryRequest {
    string id = 1;
}

message GetPublicationHistoryResponse {
    Publication publication = 1;
}

message PurgePublicationRequest {
    string id = 1;
}

message PurgePublicationResponse {
}

message PurgeAllPublicationsRequest {
}

message PurgeAllPublicationsResponse {
}

message ValidatePublicationsRequest {
    Publication publication = 1;
}

message ValidatePublicationsResponse {
    int32 seq = 1;
    string id = 2;
    string message = 3;
}

message ReindexPublicationsRequest{
}

message ReindexPublicationsResponse {
    string message = 1;
}

message GetDatasetRequest {
    string id = 1;
}

message GetDatasetResponse {
    Dataset dataset = 1;
}

message GetAllDatasetsRequest {
}

message GetAllDatasetsResponse {
    Dataset dataset = 1;
}

message SearchDatasetsRequest {
    string query = 1;
    int32 offset = 2;
    int32 limit = 3;
}

message SearchDatasetsResponse {
    repeated Dataset hits = 1;
    int32 offset = 2;
    int32 limit = 3;
    int32 total = 4;
}

message UpdateDatasetRequest {
    Dataset dataset = 1;
}

message UpdateDatasetResponse {
}

message AddDatasetsRequest {
    Dataset dataset = 1;
}

message AddDatasetsResponse {
    string message = 1;
}

message ImportDatasetsRequest {
    Dataset dataset = 1;
}

message importDatasetsResponse {
    string message = 1;
}

message GetDatasetHistoryRequest {
    string id = 1;
}

message GetDatasetHistoryResponse {
    Dataset dataset = 1;
}

message PurgeDatasetRequest {
    string id = 1;
}

message PurgeDatasetResponse {
}

message PurgeAllDatasetsRequest {
}

message PurgeAllDatasetsResponse {
}

message ValidateDatasetsRequest {
    Dataset dataset = 1;
}

message ValidateDatasetsResponse {
    int32 seq = 1;
    string id = 2;
    string message = 3;
}

message RelateRequest {
    oneof one {
        string publication_one = 1;
        string dataset_one = 2;
    }
    oneof two {
        string publication_two = 3;
        string dataset_two = 4;
    }
}

message RelateResponse {
}