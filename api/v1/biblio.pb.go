// make sure you have the protoc compiler
// and install the go plugins with
// go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
// go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
// then generate with
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative api/v1/biblio.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: api/v1/biblio.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Publication_Type int32

const (
	Publication_JOURNAL_ARTICLE Publication_Type = 0
	Publication_BOOK            Publication_Type = 1
	Publication_BOOK_CHAPTER    Publication_Type = 2
	Publication_BOOK_EDITOR     Publication_Type = 3
	Publication_ISSUE_EDITOR    Publication_Type = 4
	Publication_CONFERENCE      Publication_Type = 5
	Publication_DISSERTATION    Publication_Type = 6
	Publication_MISCELLANEOUS   Publication_Type = 7
)

// Enum value maps for Publication_Type.
var (
	Publication_Type_name = map[int32]string{
		0: "JOURNAL_ARTICLE",
		1: "BOOK",
		2: "BOOK_CHAPTER",
		3: "BOOK_EDITOR",
		4: "ISSUE_EDITOR",
		5: "CONFERENCE",
		6: "DISSERTATION",
		7: "MISCELLANEOUS",
	}
	Publication_Type_value = map[string]int32{
		"JOURNAL_ARTICLE": 0,
		"BOOK":            1,
		"BOOK_CHAPTER":    2,
		"BOOK_EDITOR":     3,
		"ISSUE_EDITOR":    4,
		"CONFERENCE":      5,
		"DISSERTATION":    6,
		"MISCELLANEOUS":   7,
	}
)

func (x Publication_Type) Enum() *Publication_Type {
	p := new(Publication_Type)
	*p = x
	return p
}

func (x Publication_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Publication_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_biblio_proto_enumTypes[0].Descriptor()
}

func (Publication_Type) Type() protoreflect.EnumType {
	return &file_api_v1_biblio_proto_enumTypes[0]
}

func (x Publication_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Publication_Type.Descriptor instead.
func (Publication_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{4, 0}
}

type Publication_Status int32

const (
	Publication_PRIVATE  Publication_Status = 0
	Publication_PUBLIC   Publication_Status = 1
	Publication_DELETED  Publication_Status = 2
	Publication_RETURNED Publication_Status = 3
)

// Enum value maps for Publication_Status.
var (
	Publication_Status_name = map[int32]string{
		0: "PRIVATE",
		1: "PUBLIC",
		2: "DELETED",
		3: "RETURNED",
	}
	Publication_Status_value = map[string]int32{
		"PRIVATE":  0,
		"PUBLIC":   1,
		"DELETED":  2,
		"RETURNED": 3,
	}
)

func (x Publication_Status) Enum() *Publication_Status {
	p := new(Publication_Status)
	*p = x
	return p
}

func (x Publication_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Publication_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_biblio_proto_enumTypes[1].Descriptor()
}

func (Publication_Status) Type() protoreflect.EnumType {
	return &file_api_v1_biblio_proto_enumTypes[1]
}

func (x Publication_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Publication_Status.Descriptor instead.
func (Publication_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{4, 1}
}

type Publication_Classification int32

const (
	Publication_U  Publication_Classification = 0
	Publication_A1 Publication_Classification = 1
	Publication_A2 Publication_Classification = 2
	Publication_A3 Publication_Classification = 3
	Publication_A4 Publication_Classification = 4
	Publication_B1 Publication_Classification = 5
	Publication_B2 Publication_Classification = 6
	Publication_B3 Publication_Classification = 7
	Publication_C1 Publication_Classification = 8
	Publication_C3 Publication_Classification = 9
	Publication_D1 Publication_Classification = 10
	Publication_D2 Publication_Classification = 11
	Publication_P1 Publication_Classification = 12
	Publication_V  Publication_Classification = 13
)

// Enum value maps for Publication_Classification.
var (
	Publication_Classification_name = map[int32]string{
		0:  "U",
		1:  "A1",
		2:  "A2",
		3:  "A3",
		4:  "A4",
		5:  "B1",
		6:  "B2",
		7:  "B3",
		8:  "C1",
		9:  "C3",
		10: "D1",
		11: "D2",
		12: "P1",
		13: "V",
	}
	Publication_Classification_value = map[string]int32{
		"U":  0,
		"A1": 1,
		"A2": 2,
		"A3": 3,
		"A4": 4,
		"B1": 5,
		"B2": 6,
		"B3": 7,
		"C1": 8,
		"C3": 9,
		"D1": 10,
		"D2": 11,
		"P1": 12,
		"V":  13,
	}
)

func (x Publication_Classification) Enum() *Publication_Classification {
	p := new(Publication_Classification)
	*p = x
	return p
}

func (x Publication_Classification) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Publication_Classification) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_biblio_proto_enumTypes[2].Descriptor()
}

func (Publication_Classification) Type() protoreflect.EnumType {
	return &file_api_v1_biblio_proto_enumTypes[2]
}

func (x Publication_Classification) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Publication_Classification.Descriptor instead.
func (Publication_Classification) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{4, 2}
}

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{0}
}

func (x *Text) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{1}
}

func (x *Id) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Contributor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Orcid      string   `protobuf:"bytes,2,opt,name=orcid,proto3" json:"orcid,omitempty"`
	LocalId    []string `protobuf:"bytes,3,rep,name=local_id,json=localId,proto3" json:"local_id,omitempty"`
	CreditRole []string `protobuf:"bytes,4,rep,name=credit_role,json=creditRole,proto3" json:"credit_role,omitempty"`
	FirstName  string   `protobuf:"bytes,5,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName   string   `protobuf:"bytes,6,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FullName   string   `protobuf:"bytes,7,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
}

func (x *Contributor) Reset() {
	*x = Contributor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contributor) ProtoMessage() {}

func (x *Contributor) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contributor.ProtoReflect.Descriptor instead.
func (*Contributor) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{2}
}

func (x *Contributor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Contributor) GetOrcid() string {
	if x != nil {
		return x.Orcid
	}
	return ""
}

func (x *Contributor) GetLocalId() []string {
	if x != nil {
		return x.LocalId
	}
	return nil
}

func (x *Contributor) GetCreditRole() []string {
	if x != nil {
		return x.CreditRole
	}
	return nil
}

func (x *Contributor) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Contributor) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Contributor) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tree []*Id  `protobuf:"bytes,2,rep,name=tree,proto3" json:"tree,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{3}
}

func (x *Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Organization) GetTree() []*Id {
	if x != nil {
		return x.Tree
	}
	return nil
}

type Publication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type             Publication_Type           `protobuf:"varint,2,opt,name=type,proto3,enum=biblio.v1.Publication_Type" json:"type,omitempty"`
	Status           Publication_Status         `protobuf:"varint,3,opt,name=status,proto3,enum=biblio.v1.Publication_Status" json:"status,omitempty"`
	Abstract         []*Text                    `protobuf:"bytes,4,rep,name=abstract,proto3" json:"abstract,omitempty"`
	AdditionalInfo   string                     `protobuf:"bytes,5,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	AlternativeTitle []string                   `protobuf:"bytes,6,rep,name=alternative_title,json=alternativeTitle,proto3" json:"alternative_title,omitempty"`
	ArticleNumber    string                     `protobuf:"bytes,7,opt,name=article_number,json=articleNumber,proto3" json:"article_number,omitempty"`
	ArxivId          string                     `protobuf:"bytes,8,opt,name=arxiv_id,json=arxivId,proto3" json:"arxiv_id,omitempty"`
	Author           []*Contributor             `protobuf:"bytes,9,rep,name=author,proto3" json:"author,omitempty"`
	BatchId          string                     `protobuf:"bytes,10,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Classification   Publication_Classification `protobuf:"varint,11,opt,name=classification,proto3,enum=biblio.v1.Publication_Classification" json:"classification,omitempty"`
	DateCreated      *timestamppb.Timestamp     `protobuf:"bytes,12,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateUpdated      *timestamppb.Timestamp     `protobuf:"bytes,13,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
	DateFrom         *timestamppb.Timestamp     `protobuf:"bytes,14,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateUntil        *timestamppb.Timestamp     `protobuf:"bytes,15,opt,name=date_until,json=dateUntil,proto3" json:"date_until,omitempty"`
	DefensePlace     string                     `protobuf:"bytes,16,opt,name=defense_place,json=defensePlace,proto3" json:"defense_place,omitempty"`
	DefenseDate      string                     `protobuf:"bytes,17,opt,name=defense_date,json=defenseDate,proto3" json:"defense_date,omitempty"`
	DefenseTime      string                     `protobuf:"bytes,18,opt,name=defense_time,json=defenseTime,proto3" json:"defense_time,omitempty"`
	Extern           bool                       `protobuf:"varint,19,opt,name=extern,proto3" json:"extern,omitempty"`
}

func (x *Publication) Reset() {
	*x = Publication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publication) ProtoMessage() {}

func (x *Publication) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publication.ProtoReflect.Descriptor instead.
func (*Publication) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{4}
}

func (x *Publication) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Publication) GetType() Publication_Type {
	if x != nil {
		return x.Type
	}
	return Publication_JOURNAL_ARTICLE
}

func (x *Publication) GetStatus() Publication_Status {
	if x != nil {
		return x.Status
	}
	return Publication_PRIVATE
}

func (x *Publication) GetAbstract() []*Text {
	if x != nil {
		return x.Abstract
	}
	return nil
}

func (x *Publication) GetAdditionalInfo() string {
	if x != nil {
		return x.AdditionalInfo
	}
	return ""
}

func (x *Publication) GetAlternativeTitle() []string {
	if x != nil {
		return x.AlternativeTitle
	}
	return nil
}

func (x *Publication) GetArticleNumber() string {
	if x != nil {
		return x.ArticleNumber
	}
	return ""
}

func (x *Publication) GetArxivId() string {
	if x != nil {
		return x.ArxivId
	}
	return ""
}

func (x *Publication) GetAuthor() []*Contributor {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Publication) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *Publication) GetClassification() Publication_Classification {
	if x != nil {
		return x.Classification
	}
	return Publication_U
}

func (x *Publication) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *Publication) GetDateUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateUpdated
	}
	return nil
}

func (x *Publication) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *Publication) GetDateUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DateUntil
	}
	return nil
}

func (x *Publication) GetDefensePlace() string {
	if x != nil {
		return x.DefensePlace
	}
	return ""
}

func (x *Publication) GetDefenseDate() string {
	if x != nil {
		return x.DefenseDate
	}
	return ""
}

func (x *Publication) GetDefenseTime() string {
	if x != nil {
		return x.DefenseTime
	}
	return ""
}

func (x *Publication) GetExtern() bool {
	if x != nil {
		return x.Extern
	}
	return false
}

type GetPublicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPublicationRequest) Reset() {
	*x = GetPublicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicationRequest) ProtoMessage() {}

func (x *GetPublicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicationRequest.ProtoReflect.Descriptor instead.
func (*GetPublicationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{5}
}

func (x *GetPublicationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPublicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publication *Publication `protobuf:"bytes,1,opt,name=publication,proto3" json:"publication,omitempty"`
}

func (x *GetPublicationResponse) Reset() {
	*x = GetPublicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicationResponse) ProtoMessage() {}

func (x *GetPublicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicationResponse.ProtoReflect.Descriptor instead.
func (*GetPublicationResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{6}
}

func (x *GetPublicationResponse) GetPublication() *Publication {
	if x != nil {
		return x.Publication
	}
	return nil
}

type GetAllPublicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllPublicationsRequest) Reset() {
	*x = GetAllPublicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPublicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPublicationsRequest) ProtoMessage() {}

func (x *GetAllPublicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPublicationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllPublicationsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{7}
}

type GetAllPublicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publication *Publication `protobuf:"bytes,1,opt,name=publication,proto3" json:"publication,omitempty"`
}

func (x *GetAllPublicationsResponse) Reset() {
	*x = GetAllPublicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_biblio_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPublicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPublicationsResponse) ProtoMessage() {}

func (x *GetAllPublicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_biblio_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPublicationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllPublicationsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_biblio_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllPublicationsResponse) GetPublication() *Publication {
	if x != nil {
		return x.Publication
	}
	return nil
}

var File_api_v1_biblio_proto protoreflect.FileDescriptor

var file_api_v1_biblio_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2e, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x63, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x63, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x41, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x04, 0x74, 0x72, 0x65, 0x65, 0x22, 0xa9, 0x09, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a,
	0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10,
	0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x72, 0x78, 0x69, 0x76,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x78, 0x69, 0x76,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x4d, 0x0a,
	0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x74, 0x69,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x66, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x4f,
	0x55, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x05, 0x12, 0x10,
	0x0a, 0x0c, 0x44, 0x49, 0x53, 0x53, 0x45, 0x52, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06,
	0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x49, 0x53, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x4e, 0x45, 0x4f, 0x55,
	0x53, 0x10, 0x07, 0x22, 0x3c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x45, 0x44, 0x10,
	0x03, 0x22, 0x7e, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x05, 0x0a, 0x01, 0x55, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x31,
	0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x32, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x33,
	0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x34, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x31,
	0x10, 0x05, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x32, 0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x33,
	0x10, 0x07, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x31, 0x10, 0x08, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x33,
	0x10, 0x09, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x31, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x32,
	0x10, 0x0b, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x31, 0x10, 0x0c, 0x12, 0x05, 0x0a, 0x01, 0x56, 0x10,
	0x0d, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x62, 0x6c,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1b,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0xc4, 0x01, 0x0a, 0x06, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x12, 0x55,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x62, 0x69,
	0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x67, 0x65, 0x6e, 0x74, 0x2d, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x2d, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_biblio_proto_rawDescOnce sync.Once
	file_api_v1_biblio_proto_rawDescData = file_api_v1_biblio_proto_rawDesc
)

func file_api_v1_biblio_proto_rawDescGZIP() []byte {
	file_api_v1_biblio_proto_rawDescOnce.Do(func() {
		file_api_v1_biblio_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_biblio_proto_rawDescData)
	})
	return file_api_v1_biblio_proto_rawDescData
}

var file_api_v1_biblio_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_biblio_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_v1_biblio_proto_goTypes = []interface{}{
	(Publication_Type)(0),              // 0: biblio.v1.Publication.Type
	(Publication_Status)(0),            // 1: biblio.v1.Publication.Status
	(Publication_Classification)(0),    // 2: biblio.v1.Publication.Classification
	(*Text)(nil),                       // 3: biblio.v1.Text
	(*Id)(nil),                         // 4: biblio.v1.Id
	(*Contributor)(nil),                // 5: biblio.v1.Contributor
	(*Organization)(nil),               // 6: biblio.v1.Organization
	(*Publication)(nil),                // 7: biblio.v1.Publication
	(*GetPublicationRequest)(nil),      // 8: biblio.v1.GetPublicationRequest
	(*GetPublicationResponse)(nil),     // 9: biblio.v1.GetPublicationResponse
	(*GetAllPublicationsRequest)(nil),  // 10: biblio.v1.GetAllPublicationsRequest
	(*GetAllPublicationsResponse)(nil), // 11: biblio.v1.GetAllPublicationsResponse
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
}
var file_api_v1_biblio_proto_depIdxs = []int32{
	4,  // 0: biblio.v1.Organization.tree:type_name -> biblio.v1.Id
	0,  // 1: biblio.v1.Publication.type:type_name -> biblio.v1.Publication.Type
	1,  // 2: biblio.v1.Publication.status:type_name -> biblio.v1.Publication.Status
	3,  // 3: biblio.v1.Publication.abstract:type_name -> biblio.v1.Text
	5,  // 4: biblio.v1.Publication.author:type_name -> biblio.v1.Contributor
	2,  // 5: biblio.v1.Publication.classification:type_name -> biblio.v1.Publication.Classification
	12, // 6: biblio.v1.Publication.date_created:type_name -> google.protobuf.Timestamp
	12, // 7: biblio.v1.Publication.date_updated:type_name -> google.protobuf.Timestamp
	12, // 8: biblio.v1.Publication.date_from:type_name -> google.protobuf.Timestamp
	12, // 9: biblio.v1.Publication.date_until:type_name -> google.protobuf.Timestamp
	7,  // 10: biblio.v1.GetPublicationResponse.publication:type_name -> biblio.v1.Publication
	7,  // 11: biblio.v1.GetAllPublicationsResponse.publication:type_name -> biblio.v1.Publication
	8,  // 12: biblio.v1.Biblio.GetPublication:input_type -> biblio.v1.GetPublicationRequest
	10, // 13: biblio.v1.Biblio.GetAllPublications:input_type -> biblio.v1.GetAllPublicationsRequest
	9,  // 14: biblio.v1.Biblio.GetPublication:output_type -> biblio.v1.GetPublicationResponse
	11, // 15: biblio.v1.Biblio.GetAllPublications:output_type -> biblio.v1.GetAllPublicationsResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v1_biblio_proto_init() }
func file_api_v1_biblio_proto_init() {
	if File_api_v1_biblio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_biblio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_biblio_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_biblio_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contributor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_biblio_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_biblio_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_biblio_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_biblio_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_biblio_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPublicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_biblio_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPublicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_biblio_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_biblio_proto_goTypes,
		DependencyIndexes: file_api_v1_biblio_proto_depIdxs,
		EnumInfos:         file_api_v1_biblio_proto_enumTypes,
		MessageInfos:      file_api_v1_biblio_proto_msgTypes,
	}.Build()
	File_api_v1_biblio_proto = out.File
	file_api_v1_biblio_proto_rawDesc = nil
	file_api_v1_biblio_proto_goTypes = nil
	file_api_v1_biblio_proto_depIdxs = nil
}
