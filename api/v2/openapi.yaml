openapi: 3.1.0

servers:
  - url: /api/v2

info:
  title: Projects Service
  version: 0.0.1

paths:
  "/import-organizations":
    post:
      summary: Import organization hierarchy
      description: Import organization hierarchy
      operationId: importOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportOrganizationsRequest"
        required: true
      responses:
        '200':
          description: Success
        default:
          $ref: "#/components/responses/Error"

  "/import-person":
    post:
      summary: Import a person
      description: Import a person
      operationId: importPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportPersonRequest"
        required: true
      responses:
        '200':
          description: Success
        default:
          $ref: "#/components/responses/Error"

  "/add-person":
    post:
      summary: Upsert a person
      description: Upsert a person
      operationId: addPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPersonRequest"
        required: true
      responses:
        '200':
          description: Success
        default:
          $ref: "#/components/responses/Error"

  "/add-project":
    post:
      summary: Upsert a project
      description: Upsert a project
      operationId: addProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectRequest'
        required: true
      responses:
        '200':
          description: Success
        default:
          $ref: "#/components/responses/Error"

security:
  - apiKey: []


components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-Api-Key

  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message

    ImportOrganizationsRequest:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/ImportOrganizationParams"

    ImportOrganizationParams:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
          minItems: 1
        parentIdentifier:
          $ref: "#/components/schemas/Identifier"
        names:
          type: array
          items:
            $ref: "#/components/schemas/Text"
        ceased:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [identifiers]

    ImportPersonRequest:
      type: object
      properties:
        person:
          $ref: "#/components/schemas/ImportPersonParams" 

    ImportPersonParams:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
          minItems: 1
        name:
          type: string
          minLength: 1
        preferredName:
          type: string
          minLength: 1
        givenName:
          type: string
          minLength: 1
        preferredGivenName:
          type: string
          minLength: 1
        familyName:
          type: string
          minLength: 1
        preferredFamilyName:
          type: string
          minLength: 1
        honorificPrefix:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        active:
          type: boolean
        role:
          type: string
          minLength: 1
        username:
          type: string
          minLength: 1
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/Attribute"
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/Token"
        affiliations:
          type: array
          items:
            type: object
            properties:
              organizationIdentifier:
                $ref: "#/components/schemas/Identifier"
            required: [organizationIdentifier]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [identifiers, name]

    AddPersonRequest:
      type: object
      properties:
        person:
          type: object
          properties:
            identifiers:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
              minItems: 1
            name:
              type: string
              minLength: 1
            preferredName:
              type: string
              minLength: 1
            givenName:
              type: string
              minLength: 1
            preferredGivenName:
              type: string
              minLength: 1
            familyName:
              type: string
              minLength: 1
            preferredFamilyName:
              type: string
              minLength: 1
            honorificPrefix:
              type: string
              minLength: 1
            email:
              type: string
              format: email
              minLength: 1
            username:
              type: string
              minLength: 1
            active:
              type: boolean
            attributes:
              type: array
              items:
                $ref: "#/components/schemas/Attribute"
          required: [identifiers, name]
      required: [person]

    AddProjectRequest:
      type: object
      properties:
        project:
          type: object
          properties:
            identifiers:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
            names:
              type: array
              items:
                $ref: "#/components/schemas/Text"
            descriptions:
              type: array
              items:
                $ref: "#/components/schemas/Text"
            startDate:
              type: string
            endDate:
              type: string
            deleted:
              type: boolean
            attributes:
              type: array
              items:
                $ref: "#/components/schemas/Attribute"
          required: [identifiers]
      required: [project]

    Attribute:
      type: object
      properties:
        scope:
          type: string
          minLength: 1
        key:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
      required: [scope, key, value]

    Identifier:
      type: object
      properties:
        kind:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
      required: [kind, value]

    Token:
      type: object
      properties:
        kind:
          type: string
          minLength: 1
        value:
          type: string
          format: byte
          minLength: 1
      required: [kind, value]

    Text:
      type: object
      properties:
        lang:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
      required: [lang, value]
