openapi: 3.1.0

servers:
  - url: /api/v2

info:
  title: Projects Service
  version: 0.0.1

paths:
  "/index-projects":
    post:
      summary: Index projects
      description: Trigger indexing projects
      operationId: indexProjects
      responses:
        '204':
          description: Success
        default:
          $ref: "#/components/responses/Error"

  "/get-organization":
    post:
      summary: Get organization
      description: Get organization
      operationId: getOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOrganizationRequest"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrganization"
        '404':
          description: Not found
          $ref: "#/components/responses/Error"
        default:
          $ref: "#/components/responses/Error"

  "/get-person":
    post:
      summary: Get person
      description: Get person
      operationId: getPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetPersonRequest"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPerson"
        '404':
          description: Not found
          $ref: "#/components/responses/Error"
        default:
          $ref: "#/components/responses/Error"
  
  "/get-project":
    post:
      summary: Get project
      description: Get project
      operationId: getProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProjectRequest"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProject"
        '404':
          description: Not found
          $ref: "#/components/responses/Error"
        default:
          $ref: "#/components/responses/Error"


  "/search-organizations":
    post:
      summary: Search organizations
      description: Search organizations
      operationId: searchOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchOrganizationsRequest"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchOrganizations"
        default:
          $ref: "#/components/responses/Error"
  
  "/search-people":
    post:
      summary: Search people
      description: Search people
      operationId: searchPeople
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchPeopleRequest"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchPeople"
        default:
          $ref: "#/components/responses/Error"

  "/import-organizations":
    post:
      summary: Import organization hierarchy
      description: Import organization hierarchy
      operationId: importOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportOrganizationsRequest"
        required: true
      responses:
        '200':
          description: Success
        '409':
          description: Duplicate error
          $ref: "#/components/responses/Error"
        default:
          $ref: "#/components/responses/Error"

  "/import-person":
    post:
      summary: Import a person
      description: Import a person
      operationId: importPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportPersonRequest"
        required: true
      responses:
        '200':
          description: Success
        '409':
          description: Duplicate error
          $ref: "#/components/responses/Error"
        default:
          $ref: "#/components/responses/Error"

  "/add-person":
    post:
      summary: Upsert a person
      description: Upsert a person
      operationId: addPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPersonRequest"
        required: true
      responses:
        '200':
          description: Success
        default:
          $ref: "#/components/responses/Error"

  "/import-project":
    post:
      summary: Import a project
      description: Import a project
      operationId: importProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportProjectRequest"
        required: true
      responses:
        '200':
          description: Success
        '409':
          description: Duplicate error
          $ref: "#/components/responses/Error"
        default:
          $ref: "#/components/responses/Error"

  "/add-project":
    post:
      summary: Upsert a project
      description: Upsert a project
      operationId: addProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectRequest'
        required: true
      responses:
        '200':
          description: Success
        default:
          $ref: "#/components/responses/Error"

  "/search-projects":
    post:
      summary: Search projects
      description: Search projects
      operationId: searchProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchProjectsRequest"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchProjects"
        default:
          $ref: "#/components/responses/Error"

security:
  - apiKey: []

components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-Api-Key

  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message

    GetOrganizationRequest:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/Identifier"
      required: [identifier]

    GetOrganization:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/Organization"
      required: [organization]

    GetPersonRequest:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/Identifier"
      required: [identifier]

    GetPerson:
      type: object
      properties:
        person:
          $ref: "#/components/schemas/Person"
      required: [person]

    GetProjectRequest:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/Identifier"
      required: [identifier]

    GetProject:
      type: object
      properties:
        project:
          $ref: "#/components/schemas/Project"
      required: [project]

    SearchOrganizationsRequest:
      type: object
      properties:
        query:
          type: string

    SearchOrganizations:
      type: object
      properties:
        hits:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
      required: [hits]

    SearchPeopleRequest:
      type: object
      properties:
        query:
          type: string

    SearchPeople:
      type: object
      properties:
        hits:
          type: array
          items:
            $ref: "#/components/schemas/Person"
      required: [hits]

    SearchProjectsRequest:
      type: object
      properties:
        query:
          type: string

    SearchProjects:
      type: object
      properties:
        hits:
          type: array
          items:
            $ref: "#/components/schemas/Project"
      required: [hits]

    ImportOrganizationsRequest:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/ImportOrganizationParams"
      required: [organizations]

    ImportOrganizationParams:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
          minItems: 1
        parentIdentifier:
          $ref: "#/components/schemas/Identifier"
        names:
          type: array
          items:
            $ref: "#/components/schemas/Text"
        ceased:
          type: boolean
        ceasedOn:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [identifiers]

    ImportPersonRequest:
      type: object
      properties:
        person:
          $ref: "#/components/schemas/ImportPersonParams"
      required: [person]

    ImportPersonParams:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
          minItems: 1
        name:
          type: string
          minLength: 1
        preferredName:
          type: string
          minLength: 1
        givenName:
          type: string
          minLength: 1
        preferredGivenName:
          type: string
          minLength: 1
        familyName:
          type: string
          minLength: 1
        preferredFamilyName:
          type: string
          minLength: 1
        honorificPrefix:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        active:
          type: boolean
        role:
          type: string
          minLength: 1
        username:
          type: string
          minLength: 1
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/Attribute"
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/Token"
        affiliations:
          type: array
          items:
            $ref: "#/components/schemas/AffiliationParams"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [identifiers, name]

    AddPersonRequest:
      type: object
      properties:
        person:
          type: object
          properties:
            identifiers:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
              minItems: 1
            name:
              type: string
              minLength: 1
            preferredName:
              type: string
              minLength: 1
            givenName:
              type: string
              minLength: 1
            preferredGivenName:
              type: string
              minLength: 1
            familyName:
              type: string
              minLength: 1
            preferredFamilyName:
              type: string
              minLength: 1
            honorificPrefix:
              type: string
              minLength: 1
            email:
              type: string
              format: email
              minLength: 1
            username:
              type: string
              minLength: 1
            active:
              type: boolean
            attributes:
              type: array
              items:
                $ref: "#/components/schemas/Attribute"
          required: [identifiers, name]
      required: [person]

    ImportProjectRequest:
      type: object
      properties:
        project:
          $ref: "#/components/schemas/ImportProjectParams" 
      required: [project]

    ImportProjectParams:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
        names:
          type: array
          items:
            $ref: "#/components/schemas/Text"
        descriptions:
          type: array
          items:
            $ref: "#/components/schemas/Text"
        startDate:
          type: string
        endDate:
          type: string
        deleted:
          type: boolean
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/Attribute"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [identifiers]

    AddProjectRequest:
      type: object
      properties:
        project:
          type: object
          properties:
            identifiers:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
            names:
              type: array
              items:
                $ref: "#/components/schemas/Text"
            descriptions:
              type: array
              items:
                $ref: "#/components/schemas/Text"
            startDate:
              type: string
            endDate:
              type: string
            deleted:
              type: boolean
            attributes:
              type: array
              items:
                $ref: "#/components/schemas/Attribute"
          required: [identifiers]
      required: [project]

    Project:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
        names:
          type: array
          items:
            $ref: "#/components/schemas/Text"
        descriptions:
          type: array
          items:
            $ref: "#/components/schemas/Text"
        startDate:
          type: string
        endDate:
          type: string
        deleted:
          type: boolean
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/Attribute"
        publicationCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [identifiers, deleted, publicationCount, createdAt, updatedAt]

    AffiliationParams:
      type: object
      properties:
        organizationIdentifier:
          $ref: "#/components/schemas/Identifier"
      required: [organizationIdentifier]

    Person:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
          minItems: 1
        name:
          type: string
          minLength: 1
        preferredName:
          type: string
          minLength: 1
        givenName:
          type: string
          minLength: 1
        preferredGivenName:
          type: string
          minLength: 1
        familyName:
          type: string
          minLength: 1
        preferredFamilyName:
          type: string
          minLength: 1
        honorificPrefix:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        username:
          type: string
          minLength: 1
        active:
          type: boolean
        role:
          type: string
          minLength: 1
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/Attribute"
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/Token"
        publicationCount:
          type: integer
        affiliations:
          type: array
          items:
            $ref: "#/components/schemas/Affiliation"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [identifiers, name, active, publicationCount, createdAt, updatedAt]

    Organization:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
          minItems: 1
        names:
          type: array
          items:
            $ref: "#/components/schemas/Text"
          minItems: 1
        ceased:
          type: boolean
        ceasedOn:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        position:
          type: integer 
        updatedAt:
          type: string
          format: date-time
        parents:
          type: array
          items:
            $ref: "#/components/schemas/ParentOrganization"
          minItems: 1
      required: [identifiers, ceased, createdAt, updatedAt]

    ParentOrganization:
      type: object
      properties:
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
          minItems: 1
        names:
          type: array
          items:
            $ref: "#/components/schemas/Text"
          minItems: 1
        ceased:
          type: boolean
        ceasedOn:
          type: string
          format: date
      required: [identifiers, ceased]

    Affiliation:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/Organization"
      required: [organization]

    Attribute:
      type: object
      properties:
        scope:
          type: string
          minLength: 1
        key:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
      required: [scope, key, value]

    Identifier:
      type: object
      properties:
        kind:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
      required: [kind, value]

    Token:
      type: object
      properties:
        kind:
          type: string
          minLength: 1
        value:
          type: string
          format: byte
          minLength: 1
      required: [kind, value]

    Text:
      type: object
      properties:
        lang:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
      required: [lang, value]
