package proxyviews

import (
	"fmt"
	"github.com/ugent-library/biblio-backoffice/ctx"
	"github.com/ugent-library/biblio-backoffice/models"
	"github.com/ugent-library/biblio-backoffice/views"
)

type ProxiedPerson struct {
	Person                     *models.Person
	DraftPublicationsCount     int
	WithdrawnPublicationsCount int
	DraftDatasetsCount         int
	WithdrawnDatasetsCount     int
}

templ UserList(c *ctx.Ctx, people []ProxiedPerson) {
	@views.PageLayout(c, views.PageLayoutArgs{
		Title: "Biblio",
		Breadcrumbs: []views.Breadcrumb{
			{LabelID: "proxies"},
		},
	}) {
		<div class="w-100 u-scroll-wrapper">
			<div class="u-scroll-wrapper__body w-100 p-6">
				<div class="table-responsive">
					<table class="table table-sm table-bordered">
						<thead>
							<tr>
								<th>Researcher</th>
								<th colspan="3">Publications</th>
								<th colspan="3">Datasets</th>
							</tr>
						</thead>
						<tbody>
							for _, p := range people {
								<tr>
									<td class="text-nowrap">
										@tableItem(c, p.Person)
									</td>
									<td>
										<a
											if p.DraftPublicationsCount > 0 {
												class="badge badge-sm rounded-pill badge-warning-light"
											} else {
												class="badge badge-sm rounded-pill badge-white"
											}
											href={ templ.SafeURL(c.PathTo("publications", "f[person][0]", p.Person.ID, "f[status][0]", "private").String()) }
										>
											<span class="badge-circle"></span>
											<span class="badge-text">{ fmt.Sprint(p.DraftPublicationsCount) } draft</span>
											<i class="if if-arrow-right"></i>
										</a>
									</td>
									<td>
										<a
											if p.WithdrawnPublicationsCount > 0 {
												class="badge badge-sm rounded-pill badge-danger-light"
											} else {
												class="badge badge-sm rounded-pill badge-white"
											}
											href={ templ.SafeURL(c.PathTo("publications", "f[person][0]", p.Person.ID, "f[status][0]", "returned").String()) }
										>
											<span class="badge-circle"></span>
											<span class="badge-text">{ fmt.Sprint(p.WithdrawnPublicationsCount) } withdrawn</span>
											<i class="if if-arrow-right"></i>
										</a>
									</td>
									<td>
										<a class="btn btn-outline-secondary btn-sm" type="button" href={ templ.SafeURL(c.PathTo("publications", "f[person][0]", p.Person.ID).String()) }>
											View all publications
										</a>
									</td>
									<td>
										<a
											if p.DraftDatasetsCount > 0 {
												class="badge badge-sm rounded-pill badge-warning-light"
											} else {
												class="badge badge-sm rounded-pill badge-white"
											}
											href={ templ.SafeURL(c.PathTo("datasets", "f[person][0]", p.Person.ID, "f[status][0]", "private").String()) }
										>
											<span class="badge-circle"></span>
											<span class="badge-text">{ fmt.Sprint(p.DraftDatasetsCount) } draft</span>
											<i class="if if-arrow-right"></i>
										</a>
									</td>
									<td>
										<a
											if p.WithdrawnDatasetsCount > 0 {
												class="badge badge-sm rounded-pill badge-danger-light"
											} else {
												class="badge badge-sm rounded-pill badge-white"
											}
											href={ templ.SafeURL(c.PathTo("datasets", "f[person][0]", p.Person.ID, "f[status][0]", "returned").String()) }
										>
											<span class="badge-circle"></span>
											<span class="badge-text">{ fmt.Sprint(p.WithdrawnDatasetsCount) } withdrawn</span>
											<i class="if if-arrow-right"></i>
										</a>
									</td>
									<td>
										<a class="btn btn-outline-secondary btn-sm" type="button" href={ templ.SafeURL(c.PathTo("datasets", "f[person][0]", p.Person.ID).String()) }>
											View all datasets
										</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	}
}
