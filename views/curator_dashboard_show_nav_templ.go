// Code generated by templ@v0.2.334 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/ugent-library/biblio-backoffice/ctx"
)

func enableNavClass(expected string, got string) string {
	if expected == got {
		return "c-sub-sidebar__item c-sub-sidebar__item--active"
	}
	return "c-sub-sidebar__item"
}

func curatorDashboardShowNav(c *ctx.Ctx, nav string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<nav><ul class=\"c-sub-sidebar-menu\">")
		if err != nil {
			return err
		}
		var var_2 = []any{enableNavClass(nav, "dashboard_publications_faculties")}
		err = templ.RenderCSSItems(ctx, templBuffer, var_2...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<li class=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_2).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><a href=\"")
		if err != nil {
			return err
		}
		var var_3 templ.SafeURL = templ.URL(c.PathTo("dashboard_publications", "type", "faculties").String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_3)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__label\">")
		if err != nil {
			return err
		}
		var_4 := `Publications - Faculties`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a></li>")
		if err != nil {
			return err
		}
		var var_5 = []any{enableNavClass(nav, "dashboard_publications_socs")}
		err = templ.RenderCSSItems(ctx, templBuffer, var_5...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<li class=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_5).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><a href=\"")
		if err != nil {
			return err
		}
		var var_6 templ.SafeURL = templ.URL(c.PathTo("dashboard_publications", "type", "socs").String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_6)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__label\">")
		if err != nil {
			return err
		}
		var_7 := `Publications - SOCs`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a></li>")
		if err != nil {
			return err
		}
		var var_8 = []any{enableNavClass(nav, "dashboard_datasets_faculties")}
		err = templ.RenderCSSItems(ctx, templBuffer, var_8...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<li class=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_8).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><a href=\"")
		if err != nil {
			return err
		}
		var var_9 templ.SafeURL = templ.URL(c.PathTo("dashboard_datasets", "type", "faculties").String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_9)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__label\">")
		if err != nil {
			return err
		}
		var_10 := `Datasets - Faculties`
		_, err = templBuffer.WriteString(var_10)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a></li>")
		if err != nil {
			return err
		}
		var var_11 = []any{enableNavClass(nav, "dashboard_datasets_socs")}
		err = templ.RenderCSSItems(ctx, templBuffer, var_11...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<li class=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_11).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><a href=\"")
		if err != nil {
			return err
		}
		var var_12 templ.SafeURL = templ.URL(c.PathTo("dashboard_datasets", "type", "socs").String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_12)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__label\">")
		if err != nil {
			return err
		}
		var_13 := `Datasets - SOCs`
		_, err = templBuffer.WriteString(var_13)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a></li></ul></nav>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
