// Code generated by templ@v0.2.334 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/ugent-library/biblio-backoffice/ctx"
	"github.com/ugent-library/biblio-backoffice/models"
	"strings"
)

func contributorShowSummary(c *ctx.Ctx, contributor *models.Contributor) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"bc-avatar-and-text align-items-start\">")
		if err != nil {
			return err
		}
		if contributor.Person != nil {
			_, err = templBuffer.WriteString("<div class=\"bc-avatar\"><i class=\"if if-ghent-university\"></i></div> <div class=\"bc-avatar-text\"><h3><span class=\"me-3\">")
			if err != nil {
				return err
			}
			var var_2 string = contributor.Person.FullName
			_, err = templBuffer.WriteString(templ.EscapeString(var_2))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span>")
			if err != nil {
				return err
			}
			if contributor.Person.Active {
				_, err = templBuffer.WriteString("<span class=\"badge rounded-pill badge-default\">")
				if err != nil {
					return err
				}
				var_3 := `Active UGent member`
				_, err = templBuffer.WriteString(var_3)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</h3>")
			if err != nil {
				return err
			}
			if affiliations := contributor.Person.Affiliations; len(affiliations) > 0 {
				_, err = templBuffer.WriteString("<p class=\"text-muted\">")
				if err != nil {
					return err
				}
				var_4 := `Current department(s):`
				_, err = templBuffer.WriteString(var_4)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" ")
				if err != nil {
					return err
				}
				for i, v := range affiliations {
					if i > 0 {
						var_5 := `,`
						_, err = templBuffer.WriteString(var_5)
						if err != nil {
							return err
						}
					}
					_, err = templBuffer.WriteString(" ")
					if err != nil {
						return err
					}
					var var_6 string = v.OrganizationID
					_, err = templBuffer.WriteString(templ.EscapeString(var_6))
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</p>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("<ul class=\"c-meta-list c-meta-list-horizontal\">")
			if err != nil {
				return err
			}
			if len(contributor.Person.UGentID) > 0 {
				_, err = templBuffer.WriteString("<li class=\"c-meta-item\">")
				if err != nil {
					return err
				}
				for _, ugentID := range contributor.Person.UGentID {
					_, err = templBuffer.WriteString("<span class=\"me-2\"><i class=\"if if-ghent-university\"></i>")
					if err != nil {
						return err
					}
					var var_7 string = ugentID
					_, err = templBuffer.WriteString(templ.EscapeString(var_7))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</span>")
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</li>")
				if err != nil {
					return err
				}
			}
			if contributor.Person.ORCID != "" {
				_, err = templBuffer.WriteString("<li class=\"c-meta-item\"><i class=\"if if-orcid\"></i>")
				if err != nil {
					return err
				}
				var var_8 string = contributor.Person.ORCID
				_, err = templBuffer.WriteString(templ.EscapeString(var_8))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</li>")
				if err != nil {
					return err
				}
			}
			if contributor.Person.Active {
				for _, ugentID := range contributor.Person.UGentID {
					if strings.HasPrefix(ugentID, "80") {
						_, err = templBuffer.WriteString("<li class=\"c-meta-item\"><a href=\"")
						if err != nil {
							return err
						}
						var var_9 templ.SafeURL = templ.URL("https://telefoonboek.ugent.be/en/people/" + ugentID)
						_, err = templBuffer.WriteString(templ.EscapeString(string(var_9)))
						if err != nil {
							return err
						}
						_, err = templBuffer.WriteString("\" target=\"_blank\"><i class=\"if if-external-link\"></i><span>")
						if err != nil {
							return err
						}
						var_10 := `View personal details`
						_, err = templBuffer.WriteString(var_10)
						if err != nil {
							return err
						}
						_, err = templBuffer.WriteString("</span></a></li>")
						if err != nil {
							return err
						}
					}
				}
			}
			_, err = templBuffer.WriteString("</ul></div>")
			if err != nil {
				return err
			}
		} else {
			_, err = templBuffer.WriteString("<div class=\"bc-avatar-and-text align-items-start\"><div class=\"bc-avatar bc-avatar--muted\"><i class=\"if if-external-link\"></i></div><div class=\"bc-avatar-text\"><h3>")
			if err != nil {
				return err
			}
			var var_11 string = contributor.Name()
			_, err = templBuffer.WriteString(templ.EscapeString(var_11))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3><p class=\"text-muted\">")
			if err != nil {
				return err
			}
			var_12 := `External, non-UGent`
			_, err = templBuffer.WriteString(var_12)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div></div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
