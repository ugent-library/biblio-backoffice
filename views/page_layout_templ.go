// Code generated by templ@v0.2.364 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/ugent-library/biblio-backoffice/ctx"

func pageLayout(c *ctx.Ctx, title, activeNav string, meta templ.Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<!doctype html><html class=\"u-maximize-height\" dir=\"ltr\" lang=\"en\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><meta name=\"robots\" content=\"noindex\"><link rel=\"stylesheet\" href=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.AssetPath("/css/app.css")))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><link rel=\"icon\" href=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.AssetPath("/favicon.ico")))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><title>")
		if err != nil {
			return err
		}
		var var_2 string = title
		_, err = templBuffer.WriteString(templ.EscapeString(var_2))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title><meta name=\"csrf-token\" content=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.CSRFToken))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		if meta != nil {
			err = meta.Render(ctx, templBuffer)
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</head><body class=\"u-maximize-height overflow-hidden u-scroll-wrapper\"><header>")
		if err != nil {
			return err
		}
		if c.Env == "development" {
			_, err = templBuffer.WriteString("<div class=\"alert alert-warning mb-0 py-1\" role=\"alert\"><p><strong>")
			if err != nil {
				return err
			}
			var_3 := `Warning!`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</strong>")
			if err != nil {
				return err
			}
			var_4 := `&nbsp;This is the&nbsp;`
			_, err = templBuffer.WriteString(var_4)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<strong>")
			if err != nil {
				return err
			}
			var_5 := `development`
			_, err = templBuffer.WriteString(var_5)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</strong>")
			if err != nil {
				return err
			}
			var_6 := `&nbsp;version of the Biblio backend. Features may not work correctly and data entered here will not be retained.`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div>")
			if err != nil {
				return err
			}
		}
		if c.Env == "staging" {
			_, err = templBuffer.WriteString("<div class=\"alert alert-warning mb-0 py-1\" role=\"alert\"><p><strong>")
			if err != nil {
				return err
			}
			var_7 := `Warning!`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</strong>")
			if err != nil {
				return err
			}
			var_8 := `&nbsp;This is the&nbsp;`
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<strong>")
			if err != nil {
				return err
			}
			var_9 := `test`
			_, err = templBuffer.WriteString(var_9)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</strong>")
			if err != nil {
				return err
			}
			var_10 := `&nbsp;version of the Biblio backend. Data entered here will not be retained.`
			_, err = templBuffer.WriteString(var_10)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div>")
			if err != nil {
				return err
			}
		}
		if c.OriginalUser != nil {
			_, err = templBuffer.WriteString("<div class=\"alert alert-danger mb-0 py-1\" role=\"alert\"><form action=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(c.PathTo("delete_impersonation").String()))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" method=\"POST\">")
			if err != nil {
				return err
			}
			err = csrfField(c).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<label class=\"my-1 me-2 fw-bold\">")
			if err != nil {
				return err
			}
			var_11 := `Viewing the perspective of `
			_, err = templBuffer.WriteString(var_11)
			if err != nil {
				return err
			}
			var var_12 string = c.User.FullName
			_, err = templBuffer.WriteString(templ.EscapeString(var_12))
			if err != nil {
				return err
			}
			var_13 := `.`
			_, err = templBuffer.WriteString(var_13)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><button type=\"submit\" class=\"btn btn-danger my-1\">")
			if err != nil {
				return err
			}
			var_14 := `return to `
			_, err = templBuffer.WriteString(var_14)
			if err != nil {
				return err
			}
			var var_15 string = c.OriginalUser.FullName
			_, err = templBuffer.WriteString(templ.EscapeString(var_15))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</button>")
			if err != nil {
				return err
			}
			var_16 := `.`
			_, err = templBuffer.WriteString(var_16)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</form></div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("<div class=\"bc-navbar bc-navbar--small bc-navbar--bordered-bottom bc-navbar--white bc-navbar--fixed shadow-sm px-4\"><div class=\"bc-toolbar bc-toolbar-sm\"><div class=\"bc-toolbar-left\"><div class=\"bc-toolbar-item\"><nav aria-label=\"breadcrumb\"><ol class=\"breadcrumb\"><li class=\"breadcrumb-item\"><a href=\"")
		if err != nil {
			return err
		}
		var var_17 templ.SafeURL = templ.URL(c.PathTo("home").String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_17)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><img class=\"c-logo d-none d-xl-inline-block\" src=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.AssetPath("/images/ghent-university-library-logo.svg")))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" alt=\"Ghent University Library\"><img class=\"c-logo d-inline-block d-xl-none\" src=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.AssetPath("/images/ghent-university-library-mark.svg")))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" alt=\"Ghent University Library\"></a></li><li class=\"breadcrumb-item\"><a href=\"")
		if err != nil {
			return err
		}
		var var_18 templ.SafeURL = templ.URL(c.PathTo("home").String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_18)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><i class=\"if if-book if--small me-3\"></i>")
		if err != nil {
			return err
		}
		var_19 := `Biblio`
		_, err = templBuffer.WriteString(var_19)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li></ol></nav></div></div><div class=\"bc-toolbar-right\"><div class=\"bc-toolbar-item\"><ul class=\"nav nav-main\"><li class=\"nav-item\"><a class=\"nav-link collapsed\" href=\"")
		if err != nil {
			return err
		}
		var var_20 templ.SafeURL = templ.URL(c.FrontendURL + "/contact")
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_20)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" target=\"_blank\"><i class=\"if if-info-circle if--small text-muted\"></i><span class=\"btn-text\">")
		if err != nil {
			return err
		}
		var_21 := `Help`
		_, err = templBuffer.WriteString(var_21)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a></li><li class=\"nav-item\">")
		if err != nil {
			return err
		}
		if c.User != nil {
			_, err = templBuffer.WriteString("<div class=\"dropdown\"><button class=\"nav-link dropdown-toggle\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><div class=\"bc-avatar-and-text\"><div class=\"bc-avatar bc-avatar--tiny bc-avatar--light-blue me-3\"><i class=\"if if-user\"></i></div><div class=\"bc-avatar-text\">")
			if err != nil {
				return err
			}
			var var_22 string = c.User.FullName
			_, err = templBuffer.WriteString(templ.EscapeString(var_22))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</div></div></button><div class=\"dropdown-menu mt-2\" x-placement=\"top\"><div class=\"bc-avatar-and-text m-4\"><div class=\"bc-avatar bc-avatar-icon bc-avatar--small\"><i class=\"if if-user\"></i></div><div class=\"bc-avatar-text\"><h4>")
			if err != nil {
				return err
			}
			var var_23 string = c.User.FullName
			_, err = templBuffer.WriteString(templ.EscapeString(var_23))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h4><p class=\"text-muted c-body-small\">")
			if err != nil {
				return err
			}
			var var_24 string = c.User.Email
			_, err = templBuffer.WriteString(templ.EscapeString(var_24))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div></div><hr class=\"dropdown-divider\">")
			if err != nil {
				return err
			}
			if c.User.CanImpersonateUser() && c.OriginalUser == nil {
				_, err = templBuffer.WriteString("<a class=\"dropdown-item\" href=\"#\" hx-get=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(c.PathTo("add_impersonation").String()))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\" hx-target=\"#modals\"><i class=\"if if-eye\"></i> ")
				if err != nil {
					return err
				}
				var_25 := `View as`
				_, err = templBuffer.WriteString(var_25)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</a>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("<a class=\"dropdown-item\" href=\"")
			if err != nil {
				return err
			}
			var var_26 templ.SafeURL = templ.URL(c.PathTo("logout").String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_26)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><i class=\"if if-log-out\"></i> ")
			if err != nil {
				return err
			}
			var_27 := `Logout`
			_, err = templBuffer.WriteString(var_27)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a></div></div>")
			if err != nil {
				return err
			}
		} else {
			_, err = templBuffer.WriteString("<a class=\"btn btn-primary btn-sm\" href=\"")
			if err != nil {
				return err
			}
			var var_28 templ.SafeURL = templ.URL(c.PathTo("login").String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_28)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><i class=\"if if-arrow-right ms-0\"></i><span class=\"btn-text me-2\">")
			if err != nil {
				return err
			}
			var_29 := `Log in`
			_, err = templBuffer.WriteString(var_29)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></a>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</li></ul></div></div></div></div></header><main><div class=\"d-flex u-maximize-height\"><div class=\"c-sidebar c-sidebar--dark-gray\">")
		if err != nil {
			return err
		}
		if c.User != nil && c.User.CanCurate() {
			_, err = templBuffer.WriteString("<div class=\"dropdown mx-lg-4 mb-6 mt-3\"><button class=\"btn btn-dark dropdown-toggle w-100 d-flex align-items-center justify-content-center\" type=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">")
			if err != nil {
				return err
			}
			if c.UserRole == "user" {
				_, err = templBuffer.WriteString("<i class=\"if if-briefcase mx-2 ms-lg-4\"></i> <span class=\"visually-hidden\">")
				if err != nil {
					return err
				}
				var_30 := `Researcher`
				_, err = templBuffer.WriteString(var_30)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span>")
				if err != nil {
					return err
				}
			} else if c.UserRole == "curator" {
				_, err = templBuffer.WriteString("<i class=\"if if-book mx-2 ms-lg-4\"></i> <span class=\"visually-hidden\">")
				if err != nil {
					return err
				}
				var_31 := `Librarian`
				_, err = templBuffer.WriteString(var_31)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</button><div class=\"dropdown-menu\"><button class=\"dropdown-item\" hx-put=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(c.PathTo("update_role", "role", "user").String()))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" hx-swap=\"none\"><i class=\"if if-briefcase\"></i> ")
			if err != nil {
				return err
			}
			var_32 := `Researcher`
			_, err = templBuffer.WriteString(var_32)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</button><button class=\"dropdown-item\" hx-put=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(c.PathTo("update_role", "role", "curator").String()))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" hx-swap=\"none\"><i class=\"if if-book\"></i> ")
			if err != nil {
				return err
			}
			var_33 := `Librarian`
			_, err = templBuffer.WriteString(var_33)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</button></div></div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("<div class=\"c-sidebar__menu\"><nav><ul class=\"c-sidebar-menu\">")
		if err != nil {
			return err
		}
		var var_34 = []any{"c-sidebar__item", templ.KV("c-sidebar__item--active", activeNav == "publications")}
		err = templ.RenderCSSItems(ctx, templBuffer, var_34...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<li class=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_34).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><a href=\"")
		if err != nil {
			return err
		}
		var var_35 templ.SafeURL = templ.URL(c.PathTo("publications").String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_35)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__icon\"><i class=\"if if-article\"></i></span><span class=\"c-sidebar__label\">")
		if err != nil {
			return err
		}
		var_36 := `Biblio Publications`
		_, err = templBuffer.WriteString(var_36)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a></li>")
		if err != nil {
			return err
		}
		var var_37 = []any{"c-sidebar__item", templ.KV("c-sidebar__item--active", activeNav == "datasets")}
		err = templ.RenderCSSItems(ctx, templBuffer, var_37...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<li class=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_37).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><a href=\"")
		if err != nil {
			return err
		}
		var var_38 templ.SafeURL = templ.URL(c.PathTo("datasets").String())
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_38)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__icon\"><i class=\"if if-database\"></i></span><span class=\"c-sidebar__label\">")
		if err != nil {
			return err
		}
		var_39 := `Biblio Datasets`
		_, err = templBuffer.WriteString(var_39)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a></li>")
		if err != nil {
			return err
		}
		if c.UserRole == "curator" {
			var var_40 = []any{"c-sidebar__item", templ.KV("c-sidebar__item--active", activeNav == "dashboard")}
			err = templ.RenderCSSItems(ctx, templBuffer, var_40...)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<li class=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_40).String()))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><a href=\"")
			if err != nil {
				return err
			}
			var var_41 templ.SafeURL = templ.URL(c.PathTo("dashboard_publications", "type", "faculties").String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_41)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__icon\"><i class=\"if if-grid\"></i></span><span class=\"c-sidebar__label\">")
			if err != nil {
				return err
			}
			var_42 := `Dashboard`
			_, err = templBuffer.WriteString(var_42)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></a></li> <li class=\"c-sidebar__item\"><a href=\"")
			if err != nil {
				return err
			}
			var var_43 templ.SafeURL = templ.URL(c.PathTo("publication_batch").String())
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_43)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"><span class=\"c-sidebar__label\">")
			if err != nil {
				return err
			}
			var_44 := `Batch`
			_, err = templBuffer.WriteString(var_44)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></a></li>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</ul></nav></div><div class=\"c-sidebar__bottom\"><img src=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.AssetPath("/images/logo-ugent-white.svg")))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" class=\"d-none d-lg-block\" alt=\"Logo UGent\" height=\"48px\" width=\"auto\"><img src=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.AssetPath("/images/mark-ugent-white.svg")))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" class=\"d-block d-lg-none\" alt=\"Logo UGent\" height=\"20px\" width=\"auto\"></div></div>")
		if err != nil {
			return err
		}
		err = var_1.Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></main><div id=\"modals\"></div><template class=\"template-modal-error\"><div class=\"d-block modal-backdrop fade show\"></div><div class=\"d-block modal show\" tabindex=\"-1\" aria-modal=\"true\" role=\"dialog\"><div class=\"modal-dialog modal-dialog-centered\" role=\"document\"><div class=\"modal-content\"><div class=\"modal-body\"><div class=\"c-blank-slate c-blank-slate-danger\"><div class=\"bc-avatar\"><i class=\"if if-error-circle\"></i></div><p class=\"msg\"></p></div></div><div class=\"modal-footer\"><div class=\"bc-toolbar\"><div class=\"bc-toolbar-left\"><button class=\"btn btn-link modal-close\">")
		if err != nil {
			return err
		}
		var_45 := `Close`
		_, err = templBuffer.WriteString(var_45)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div></div></div></div></div></div></template><div id=\"flash-messages\">")
		if err != nil {
			return err
		}
		for _, f := range c.Flash {
			err = flashMessage(f).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div><script type=\"application/javascript\" src=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(c.AssetPath("/js/app.js")))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var_46 := ``
		_, err = templBuffer.WriteString(var_46)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script></body></html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
