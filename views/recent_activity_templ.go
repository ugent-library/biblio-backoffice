// Code generated by templ@v0.2.364 DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/ugent-library/biblio-backoffice/ctx"
	"github.com/ugent-library/biblio-backoffice/models"
	"time"
)

type ActivityObject int
type ActivityEvent int

const (
	PublicationObject ActivityObject = iota
	DatasetObject

	CreateEvent ActivityEvent = iota
	PublishEvent
	RepublishEvent
	WithdrawEvent
	LockEvent
	UpdateEvent
)

type Activity struct {
	Event     ActivityEvent
	User      *models.Person
	Object    ActivityObject
	Datestamp time.Time
	Status    string
	URL       string
	Title     string
}

func RecentActivity(c *ctx.Ctx, acts []Activity) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"mb-6\"><div class=\"bc-toolbar\"><div class=\"bc-toolbar-left\"><h2>")
		if err != nil {
			return err
		}
		var_2 := `Recent activity`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2></div><div class=\"bc-toolbar-right\"><a class=\"btn btn-tertiary\" href=\"#\"><span class=\"btn-text\">")
		if err != nil {
			return err
		}
		var_3 := `View all`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span><i class=\"if if-chevron-right\"></i></a></div></div>")
		if err != nil {
			return err
		}
		if len(acts) > 0 {
			_, err = templBuffer.WriteString("<ul class=\"c-activity-list\">")
			if err != nil {
				return err
			}
			for _, act := range acts {
				_, err = templBuffer.WriteString("<li class=\"c-activity-item\"><div class=\"c-activity-item__avatar-wrapper\"><div class=\"bc-avatar bc-avatar--muted bc-avatar--small\">")
				if err != nil {
					return err
				}
				switch act.Event {
				case CreateEvent:
					_, err = templBuffer.WriteString("<i class=\"if if-article\"></i>")
					if err != nil {
						return err
					}
				case PublishEvent, RepublishEvent:
					_, err = templBuffer.WriteString("<i class=\"if if-book\"></i>")
					if err != nil {
						return err
					}
				case WithdrawEvent:
					_, err = templBuffer.WriteString("<i class=\"if if-arrow-go-back\"></i>")
					if err != nil {
						return err
					}
				case LockEvent:
					_, err = templBuffer.WriteString("<i class=\"if if-check\"></i>")
					if err != nil {
						return err
					}
				case UpdateEvent:
					_, err = templBuffer.WriteString("<i class=\"if if-edit\"></i>")
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</div></div><div class=\"c-activity-item__content\"><div class=\"c-activity-item__activity\"><div class=\"c-activity-item__date\">")
				if err != nil {
					return err
				}
				var var_4 string = act.Datestamp.In(c.Timezone).Format("2006-01-02 15:04")
				_, err = templBuffer.WriteString(templ.EscapeString(var_4))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div><div class=\"c-activity-item__text\"><span>")
				if err != nil {
					return err
				}
				if act.User != nil && act.User.CanCurate() {
					var_5 := `A Biblio Team member`
					_, err = templBuffer.WriteString(var_5)
					if err != nil {
						return err
					}
				} else if act.User != nil {
					var var_6 string = act.User.FullName
					_, err = templBuffer.WriteString(templ.EscapeString(var_6))
					if err != nil {
						return err
					}
				} else {
					var_7 := `System`
					_, err = templBuffer.WriteString(var_7)
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</span> ")
				if err != nil {
					return err
				}
				var var_8 string = " "
				_, err = templBuffer.WriteString(templ.EscapeString(var_8))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" ")
				if err != nil {
					return err
				}
				switch act.Event {
				case CreateEvent:
					var_9 := `started a `
					_, err = templBuffer.WriteString(var_9)
					if err != nil {
						return err
					}
					var var_10 string = act.Status
					_, err = templBuffer.WriteString(templ.EscapeString(var_10))
					if err != nil {
						return err
					}
				case PublishEvent:
					var_11 := `published`
					_, err = templBuffer.WriteString(var_11)
					if err != nil {
						return err
					}
				case RepublishEvent:
					var_12 := `republished`
					_, err = templBuffer.WriteString(var_12)
					if err != nil {
						return err
					}
				case WithdrawEvent:
					var_13 := `withdrew`
					_, err = templBuffer.WriteString(var_13)
					if err != nil {
						return err
					}
				case LockEvent:
					var_14 := `locked`
					_, err = templBuffer.WriteString(var_14)
					if err != nil {
						return err
					}
				case UpdateEvent:
					var_15 := `edited`
					_, err = templBuffer.WriteString(var_15)
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString(" ")
				if err != nil {
					return err
				}
				var var_16 string = " "
				_, err = templBuffer.WriteString(templ.EscapeString(var_16))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" ")
				if err != nil {
					return err
				}
				switch act.Object {
				case PublicationObject:
					var_17 := `publication`
					_, err = templBuffer.WriteString(var_17)
					if err != nil {
						return err
					}
				case DatasetObject:
					var_18 := `dataset`
					_, err = templBuffer.WriteString(var_18)
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString(" ")
				if err != nil {
					return err
				}
				var var_19 string = " "
				_, err = templBuffer.WriteString(templ.EscapeString(var_19))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" <a class=\"c-activity-item__link\" href=\"")
				if err != nil {
					return err
				}
				var var_20 templ.SafeURL = templ.URL(act.URL)
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_20)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\">")
				if err != nil {
					return err
				}
				var var_21 string = act.Title
				_, err = templBuffer.WriteString(templ.EscapeString(var_21))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</a></div></div></div></li>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</ul>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
