package publication

import "github.com/ugent-library/biblio-backoffice/ctx"
import "github.com/ugent-library/biblio-backoffice/models"
import "github.com/ugent-library/biblio-backoffice/views"
import relatedorganizationviews "github.com/ugent-library/biblio-backoffice/views/relatedorganization"
import contributorviews "github.com/ugent-library/biblio-backoffice/views/contributor"
import "fmt"
import "net/url"

type SummaryArgs struct {
	Publication    *models.Publication
	PublicationURL *url.URL
	Actions        templ.Component
	Footer         templ.Component
	Links          templ.Component
}

templ Summary(c *ctx.Ctx, args SummaryArgs) {
	<div class="w-100">
		<div class="c-thumbnail-and-text align-items-start w-100">
			if c.UserRole == "curator" {
				<div class="c-thumbnail c-thumbnail-1-1 c-thumbnail-img c-thumbnail-md-small c-thumbnail-lg-large d-none d-lg-block">
					<a href={ templ.URL(args.PublicationURL.String()) }>
						<div class="c-thumbnail-inner">
							<i class="if if-article"></i>
						</div>
					</a>
				</div>
			}
			<div class="c-thumbnail-text">
				<div class="hstack-md-responsive align-items-start gap-3 w-100" data-collapsible-card>
					<div class="vstack gap-5">
						<div class="vstack gap-2">
							<div class="d-inline-flex align-items-center flex-wrap">
								@views.BadgeStatus(args.Publication.Status)
								if args.Publication.Locked {
									@views.BadgeLocked()
								}
								@BadgeType(c, args.Publication)
								if mainFile := args.Publication.MainFile(); mainFile != nil {
									@AccessLevel(c, mainFile)
								} else if !args.Publication.Extern {
									<span class="c-subline ps-2 me-3 pe-3">
										<a href={ views.URL(args.PublicationURL).SetQueryParam("show", "files").SafeURL() } class="c-link-muted">
											<i class="if if-edit if--small"></i>
											<em>Add document type: full text</em>
										</a>
									</span>
								}
							</div>
							<h4 class="mb-0">
								if c.UserRole == "curator" {
									if args.Publication.Title != "" {
										{ args.Publication.Title }
									} else {
										Untitled record
									}
								} else {
									<a href={ templ.URL(args.PublicationURL.String()) }>
										<span class="list-group-item-title">
											if args.Publication.Title != "" {
												{ args.Publication.Title }
											} else {
												Untitled record
											}
										</span>
									</a>
								}
							</h4>
							@SummaryParts(c, args.Publication)
							@contributorviews.Summary(c, "author", args.Publication.Author, views.URL(args.PublicationURL).SetQueryParam("show", "contributors").String())
						</div>
						<div class="collapsible-card-content collapse" data-collapsible-card-content>
							<div class="vstack gap-3">
								<div class="d-flex align-items-center">
									<i class="if if-building if--small if--muted me-2"></i>
									if len(args.Publication.RelatedOrganizations) > 0 {
										@relatedorganizationviews.Summary(c, args.Publication.RelatedOrganizations, views.URL(args.PublicationURL).SetQueryParam("show", "contributors").String())
									} else {
										<a href={ views.URL(args.PublicationURL).SetQueryParam("show", "contributors").SafeURL() } class="c-link-muted">
											<i class="if if-edit if--small"></i>
											<em>Add department</em>
										</a>
									}
								</div>
								<ul class="c-meta-list c-meta-list-inline">
									if vabb := args.Publication.VABB(); vabb != "" {
										if c.User.CanCurate() {
											<li class="c-meta-item">
												<i class="if if-bar-chart if--muted if--small"></i>
												<span class="text-muted">VABB: { vabb }</span>
											</li>
										} else {
											<li class="c-meta-item" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title={ vabb }>
												<i class="if if-bar-chart if--muted if--small"></i>
												<span class="text-muted">VABB</span>
											</li>
										}
									}
									if args.Publication.Legacy {
										<li class="c-meta-item" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Legacy record">
											<i class="if if-forbid if--muted if--small"></i>
											<span class="text-muted">Legacy</span>
										</li>
									}
									if len(args.Publication.RelatedDataset) > 0 {
										<li class="c-meta-item" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title={ fmt.Sprintf("%d related datasets", len(args.Publication.RelatedDataset)) }>
											<i class="if if-database if--muted if--small"></i>
											<span class="text-muted">{ fmt.Sprintf("%d", len(args.Publication.RelatedDataset)) }</span>
										</li>
									}
								</ul>
							</div>
						</div>
						if args.Footer != nil {
							@args.Footer
						}
						@args.Footer
						<div class="d-lg-flex flex-row-reverse align-items-center justify-content-end vstack gap-3 flex-wrap">
							<ul class="c-meta-list c-meta-list-inline c-body-small">
								<li class="c-meta-item">
									{ views.CreatedBy(c, args.Publication.DateCreated, args.Publication.Creator) }
								</li>
								<li class="c-meta-item">
									{ views.UpdatedBy(c, args.Publication.DateUpdated, args.Publication.User, args.Publication.LastUser) }
								</li>
							</ul>
							<div class="d-block pe-3">
								<div class="input-group">
									<button type="button" class="btn btn-outline-secondary btn-sm" data-clipboard={ args.Publication.ID }>
										<i class="if if-copy text-muted "></i>
										<span class="btn-text ms-0 me-1">Biblio ID</span>
									</button>
									<code class="c-code">{ args.Publication.ID }</code>
								</div>
							</div>
						</div>
						if args.Links != nil {
							@args.Links
						}
					</div>
					if args.Actions != nil {
						@args.Actions
					}
				</div>
			</div>
		</div>
	</div>
}
