package publication

import (
	"fmt"
	"github.com/ugent-library/biblio-backoffice/ctx"
	"github.com/ugent-library/biblio-backoffice/localize"
	"github.com/ugent-library/biblio-backoffice/models"
	"github.com/ugent-library/biblio-backoffice/views/form"
	"github.com/ugent-library/okay"
)

templ EditConferenceDialog(c *ctx.Ctx, p *models.Publication, conflict bool, errors *okay.Errors) {
	<div class="modal-dialog modal-dialog-centered modal-fullscreen modal-dialog-scrollable" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title">Edit conference details</h2>
			</div>
			<div class="modal-body">
				if conflict {
					<div class="alert alert-danger mb-0" role="alert">
						<i class="if if--error if-error-circle-fill"></i>
						The publication you are editing has been changed by someone else. Please copy your edits, then close this form.
					</div>
				}
				@form.Errors(localize.ValidationErrors(c.Loc, errors))
				<ul class="list-group list-group-flush" data-panel-state="edit">
					<li class="list-group-item">
						@form.Text(form.TextArgs{
							FieldArgs: form.FieldArgs{
								Label:     c.Loc.Get("builder.conference.name"),
								Name:      "name",
								Cols:      9,
								Error:     localize.ValidationErrorAt(c.Loc, errors, "/conference_name"),
								AutoFocus: true,
							},
							Value: p.ConferenceName,
						})
						@form.Text(form.TextArgs{
							FieldArgs: form.FieldArgs{
								Label: c.Loc.Get("builder.conference.location"),
								Name:  "location",
								Cols:  9,
								Error: localize.ValidationErrorAt(c.Loc, errors, "/conference_location"),
							},
							Value: p.ConferenceLocation,
						})
						@form.Text(form.TextArgs{
							FieldArgs: form.FieldArgs{
								Label: c.Loc.Get("builder.conference.organizer"),
								Name:  "organizer",
								Cols:  9,
								Error: localize.ValidationErrorAt(c.Loc, errors, "/conference_organizer"),
							},
							Value: p.ConferenceOrganizer,
						})
						@form.Text(form.TextArgs{
							FieldArgs: form.FieldArgs{
								Label: c.Loc.Get("builder.conference.start_date"),
								Name:  "start_date",
								Cols:  3,
								Error: localize.ValidationErrorAt(c.Loc, errors, "/conference_start_date"),
								Help:  c.Loc.Get("builder.conference.start_date.help"),
							},
							Value: p.ConferenceStartDate,
						})
						@form.Text(form.TextArgs{
							FieldArgs: form.FieldArgs{
								Label: c.Loc.Get("builder.conference.end_date"),
								Name:  "end_date",
								Cols:  3,
								Error: localize.ValidationErrorAt(c.Loc, errors, "/conference_end_date"),
								Help:  c.Loc.Get("builder.conference.end_date.help"),
							},
							Value: p.ConferenceEndDate,
						})
					</li>
				</ul>
			</div>
			<div class="modal-footer">
				<div class="bc-toolbar">
					if conflict {
						<div class="bc-toolbar-left">
							<button class="btn btn-primary modal-close">Close</button>
						</div>
					} else {
						<div class="bc-toolbar-left">
							<button class="btn btn-link modal-close">Cancel</button>
						</div>
						<div class="bc-toolbar-right">
							<button
								type="button"
								name="create"
								class="btn btn-primary"
								hx-put={ c.PathTo("publication_update_conference", "id", p.ID).String() }
								hx-headers={ fmt.Sprintf(`{"If-Match": "%s"}`, p.SnapshotID) }
								hx-include=".modal-body"
								hx-swap="none"
							>
								Save
							</button>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
}
