package publication

import (
	"fmt"
	"github.com/ugent-library/biblio-backoffice/ctx"
	"github.com/ugent-library/biblio-backoffice/localize"
	"github.com/ugent-library/biblio-backoffice/models"
	"github.com/ugent-library/biblio-backoffice/views/form"
	"github.com/ugent-library/okay"
)

templ EditAdditionalInfoDialog(c *ctx.Ctx, p *models.Publication, conflict bool, errors *okay.Errors) {
	<div class="modal-dialog modal-dialog-centered modal-fullscreen modal-dialog-scrollable" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title">Edit additional information</h2>
			</div>
			<div class="modal-body">
				if conflict {
					<div class="alert alert-danger mb-0" role="alert">
						<i class="if if--error if-error-circle-fill"></i>
						The publication you are editing has been changed by someone else. Please copy your edits, then close this form.
					</div>
				}
				@form.Errors(localize.ValidationErrors(c.Loc, errors))
				<ul class="list-group list-group-flush" data-panel-state="edit">
					<li class="list-group-item">
						if p.UsesResearchField() {
							@form.SelectRepeat(form.SelectRepeatArgs{
								FieldArgs: form.FieldArgs{
									Label:     c.Loc.Get("builder.research_field"),
									Name:      "research_field",
									Cols:      9,
									Error:     localize.ValidationErrorAt(c.Loc, errors, "/research_field"),
									AutoFocus: true,
								},
								Values:      p.ResearchField,
								EmptyOption: true,
								Options:     localize.ResearchFieldOptions(c.Loc),
							})
						}
						if p.UsesKeyword() {
							@form.Tags(form.TagsArgs{
								FieldArgs: form.FieldArgs{
									Label: c.Loc.Get("builder.keyword"),
									Name:  "keyword",
									Cols:  9,
									Error: localize.ValidationErrorAt(c.Loc, errors, "/keyword"),
									Help:  c.Loc.Get("builder.keyword.help"),
								},
								Values: p.Keyword,
							})
						}
						@form.TextArea(form.TextAreaArgs{
							FieldArgs: form.FieldArgs{
								Label: c.Loc.Get("builder.additional_info"),
								Name:  "additional_info",
								Cols:  9,
								Error: localize.ValidationErrorAt(c.Loc, errors, "/additional_info"),
							},
							Rows:  4,
							Value: p.AdditionalInfo,
						})
					</li>
				</ul>
			</div>
			<div class="modal-footer">
				<div class="bc-toolbar">
					if conflict {
						<div class="bc-toolbar-left">
							<button class="btn btn-primary modal-close">Close</button>
						</div>
					} else {
						<div class="bc-toolbar-left">
							<button class="btn btn-link modal-close">Cancel</button>
						</div>
						<div class="bc-toolbar-right">
							<button
								type="button"
								name="create"
								class="btn btn-primary"
								hx-put={ c.PathTo("publication_update_additional_info", "id", p.ID).String() }
								hx-headers={ fmt.Sprintf(`{"If-Match": "%s"}`, p.SnapshotID) }
								hx-include=".modal-body"
								hx-swap="none"
							>
								Save
							</button>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
}
