package publication

import "github.com/ugent-library/biblio-backoffice/ctx"
import "github.com/ugent-library/biblio-backoffice/identifiers"
import "github.com/ugent-library/biblio-backoffice/models"
import "github.com/ugent-library/biblio-backoffice/views"
import relatedorganizationviews "github.com/ugent-library/biblio-backoffice/views/relatedorganization"
import contributorviews "github.com/ugent-library/biblio-backoffice/views/contributor"
import "fmt"
import "net/url"

templ pubSummary(c *ctx.Ctx, pub *models.Publication, pubURL *url.URL) {
	<div class="w-100">
		<div class="c-thumbnail-and-text align-items-start w-100">
			if c.UserRole == "curator" {
				<div class="c-thumbnail c-thumbnail-1-1 c-thumbnail-img c-thumbnail-md-small c-thumbnail-lg-large d-none d-lg-block">
					<a href={ templ.URL(pubURL.String()) }>
						<div class="c-thumbnail-inner">
							<i class="if if-article"></i>
						</div>
					</a>
				</div>
			}
			<div class="c-thumbnail-text">
				<div class="hstack-md-responsive align-items-start gap-3 w-100" data-collapsible-card>
					<div class="vstack gap-5">
						<div class="vstack gap-2">
							<div class="d-inline-flex align-items-center flex-wrap">
								@views.BadgeStatus(pub.Status)
								if pub.Locked {
									<span class="c-subline ps-2 me-3 pe-3 border-end" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Locked for editing">
										<i class="if if-lock if--small if--muted"></i>
										<span class="text-muted c-body-small ms-2">Locked</span>
									</span>
								}
								<span class="c-subline ps-2 me-3 pe-3 border-end">
									if pub.Classification != "" {
										{ fmt.Sprintf("%s: %s", c.Loc.Get("publication_types."+pub.Type), pub.Classification) }
									} else {
										{ c.Loc.Get("publication_types."+pub.Type) }
									}
								</span>
								if mainFile := pub.MainFile(); mainFile != nil {
									@AccessLevel(c, mainFile)
								} else if !pub.Extern {
									<span class="c-subline ps-2 me-3 pe-3">
										<a href={ views.URL(pubURL).SetQueryParam("show", "files").SafeURL() } class="c-link-muted">
											<i class="if if-edit if--small"></i>
											<em>Add document type: full text</em>
										</a>
									</span>
								}
							</div>
							<h4 class="mb-0">
								if c.UserRole == "curator" {
									if pub.Title != "" {
										{ pub.Title }
									} else {
										Untitled record
									}
								} else {
									<a href={ templ.URL(pubURL.String()) }>
										<span class="list-group-item-title">
											if pub.Title != "" {
												{ pub.Title }
											} else {
												Untitled record
											}
										</span>
									</a>
								}
							</h4>
							<ul class="c-meta-list c-meta-list-inline">
								for _, summaryPart := range pub.SummaryParts() {
									<li class="c-meta-item">{ summaryPart }</li>
								}
							</ul>
							@contributorviews.Summary(c, "author", pub.Author, views.URL(pubURL).SetQueryParam("show", "contributors").String())
						</div>
						<div class="collapsible-card-content collapse" data-collapsible-card-content>
							<div class="vstack gap-3">
								<div class="d-flex align-items-center">
									<i class="if if-building if--small if--muted me-2"></i>
									if len(pub.RelatedOrganizations) > 0 {
										@relatedorganizationviews.Summary(c, pub.RelatedOrganizations, views.URL(pubURL).SetQueryParam("show", "contributors").String())
									} else {
										<a href={ views.URL(pubURL).SetQueryParam("show", "contributors").SafeURL() } class="c-link-muted">
											<i class="if if-edit if--small"></i>
											<em>Add department</em>
										</a>
									}
								</div>
								<ul class="c-meta-list c-meta-list-inline">
									if vabb := pub.VABB(); vabb != "" {
										if c.User.CanCurate() {
											<li class="c-meta-item">
												<i class="if if-bar-chart if--muted if--small"></i>
												<span class="text-muted">VABB: { vabb }</span>
											</li>
										} else {
											<li class="c-meta-item" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title={ vabb }>
												<i class="if if-bar-chart if--muted if--small"></i>
												<span class="text-muted">VABB</span>
											</li>
										}
									}
									if pub.Legacy {
										<li class="c-meta-item" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Legacy record">
											<i class="if if-forbid if--muted if--small"></i>
											<span class="text-muted">Legacy</span>
										</li>
									}
									if len(pub.RelatedDataset) > 0 {
										<li class="c-meta-item" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title={ fmt.Sprintf("%d related datasets", len(pub.RelatedDataset)) }>
											<i class="if if-database if--muted if--small"></i>
											<span class="text-muted">{ fmt.Sprintf("%d", len(pub.RelatedDataset)) }</span>
										</li>
									}
								</ul>
							</div>
						</div>
						@pubSummaryFooter(c, pub)
						<div class="d-lg-flex flex-row-reverse align-items-center justify-content-end vstack gap-3 flex-wrap">
							<ul class="c-meta-list c-meta-list-inline c-body-small">
								<li class="c-meta-item">
									{ views.CreatedBy(c, pub.DateCreated, pub.Creator) }
								</li>
								<li class="c-meta-item">
									{ views.UpdatedBy(c, pub.DateUpdated, pub.User, pub.LastUser) }
								</li>
							</ul>
							<div class="d-block pe-3">
								<div class="input-group">
									<button type="button" class="btn btn-outline-secondary btn-sm" data-clipboard={ pub.ID }>
										<i class="if if-copy text-muted "></i>
										<span class="btn-text ms-0 me-1">Biblio ID</span>
									</button>
									<code class="c-code">{ pub.ID }</code>
								</div>
							</div>
						</div>
						if c.UserRole == "curator" {
							@pubSummaryLinks(c, pub, pubURL)
						}
					</div>
					@pubSummaryActions(c, pub, pubURL)
				</div>
			</div>
		</div>
	</div>
}

templ pubSummaryActions(c *ctx.Ctx, pub *models.Publication, pubURL *url.URL) {
	<div class="c-button-toolbar">
		<button class="btn btn-tertiary btn-lg-only-responsive pt-0" data-collapsible-card-toggle>
			<i class="if if-info-circle"></i>
			<span class="btn-text d-md-none d-lg-inline-block">More info</span>
			<span class="visually-hidden">View more details</span>
		</button>
		<div class="dropdown">
			<button class="btn btn-tertiary btn-lg-only-responsive pt-0" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				<i class="if if-more"></i>
				<span class="btn-text d-md-none d-lg-inline-block">Actions</span>
				<span class="visually-hidden">View more actions</span>
			</button>
			<div class="dropdown-menu me-3">
				<a class="dropdown-item" href={ templ.URL(pubURL.String()) }>
					<i class="if if-eye"></i>
					<span>View publication</span>
				</a>
				<div class="dropdown-divider"></div>
				if pub.Status == "public" {
					<a class="dropdown-item" href={ templ.URL(fmt.Sprintf("%s/publication/%s", c.FrontendURL, pub.ID)) } target="_blank">
						<i class="if if-book"></i>
						<span>Public Biblio Location</span>
					</a>
				}
				if c.UserRole == "curator" {
					<a class="dropdown-item" href={ views.URL(pubURL).SetQueryParam("show", "files").SafeURL() }>
						<i class="if if-file"></i>
						<span>View full texts &amp; files</span>
					</a>
					if pub.DOI != "" {
						<a class="dropdown-item" href={ templ.URL(identifiers.Resolve("DOI", pub.DOI)) } target="_blank">
							<i class="if if-external-link"></i>
							<span>DOI</span>
						</a>
					}
					if pub.WOSID != "" {
						<a class="dropdown-item" href={ templ.URL(identifiers.Resolve("WebOfScience", pub.WOSID)) } target="_blank">
							<i class="if if-external-link"></i>
							<span>WoS</span>
						</a>
					}
					if pub.PubMedID != "" {
						<a class="dropdown-item" href={ templ.URL(identifiers.Resolve("PubMed", pub.PubMedID)) } target="_blank">
							<i class="if if-external-link"></i>
							<span>PubMed</span>
						</a>
					}
				} else {
					if pub.DOI != "" {
						<a class="dropdown-item" href={ views.URLFromString("https://www.altmetric.com/explorer/outputs?scope=all").SetQueryParam("identifier", pub.DOI).SafeURL() } target="_blank">
							<i class="if if-external-link"></i>
							<span>Altmetric</span>
						</a>
					}
				}
				if c.User.CanDeletePublication(pub) {
					<div class="dropdown-divider"></div>
					<button
						class="dropdown-item"
						hx-get={ views.URL(c.PathTo("publication_confirm_delete", "id", pub.ID)).SetQueryParam("redirect-url", c.CurrentURL.String()).String() }
						hx-target="#modals"
					>
						<i class="if if-delete"></i>
						<span>Delete</span>
					</button>
				}
			</div>
		</div>
		<a class="btn btn-tertiary btn-lg-only-responsive pt-0" href={ templ.URL(pubURL.String()) }>
			<i class="if if-eye"></i>
			<span class="btn-text d-md-none d-lg-inline-block">View</span>
			<span class="visually-hidden">Go to record</span>
		</a>
	</div>
}

templ pubSummaryFooter(c *ctx.Ctx, pub *models.Publication) {
	if pub.Message != "" {
		<div class="alert alert-info mb-0">
			<i class="if if-message"></i>
			<div class="alert-content">
				<h3 class="Biblio message">Biblio message</h3>
				<p class="mt-2">
					@templ.Raw(views.Linkify(pub.Message))
				</p>
			</div>
		</div>
	}
}

templ pubSummaryLinks(c *ctx.Ctx, pub *models.Publication, pubURL *url.URL) {
	<ul class="c-meta-list c-meta-list-inline">
		<li class="c-meta-item">
			<a class="c-link-muted c-body-small" href={ templ.URL(pubURL.String()) }>View publication</a>
		</li>
		<li class="c-meta-item">
			<a class="c-link-muted c-body-small" href={ views.URL(pubURL).SetQueryParam("show", "files").SafeURL() }>Full texts &amp; files</a>
		</li>
		if pub.DOI != "" {
			<li class="c-meta-item">
				<a class="c-link-muted c-body-small" href={ templ.URL(identifiers.Resolve("DOI", pub.DOI)) } target="_blank">DOI</a>
			</li>
		}
		if pub.WOSID != "" {
			<li class="c-meta-item">
				<a class="c-link-muted c-body-small" href={ templ.URL(identifiers.Resolve("WebOfScience", pub.WOSID)) } target="_blank">WoS</a>
			</li>
		}
		if pub.PubMedID != "" {
			<li class="c-meta-item">
				<a class="c-link-muted c-body-small" href={ templ.URL(identifiers.Resolve("PubMed", pub.PubMedID)) } target="_blank">PubMed</a>
			</li>
		}
		if pub.Status == "public" {
			<li class="c-meta-item">
				<a class="c-link-muted c-body-small" href={ templ.URL(fmt.Sprintf("%s/publication/%s", c.FrontendURL, pub.ID)) } target="_blank">Public Biblio Location</a>
			</li>
		}
	</ul>
}
